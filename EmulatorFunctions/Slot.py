class SlotClass:
    def Type_Any(): #Not an offical type only used to represent slots that can have anything in them
        return -1
    def Type_None():
        return 0
    def Type_Helmet():
        return 1
    def Type_Suit():
        return 2
    def Type_Back():
        return 3
    def Type_GasFilter():
        return 4
    def Type_GasCanister():
        return 5
    def Type_Motherboard():
        return 6
    def Type_Circuitboard():
        return 7
    def Type_DataDisk():
        return 8
    def Type_Organ():
        return 9
    def Type_Ore():
        return 10
    def Type_Plant():
        return 11
    def Type_Uniform():
        return 12
    def Type_Entity():
        return 13
    def Type_Battery():
        return 14
    def Type_Egg():
        return 15
    def Type_Belt():
        return 16
    def Type_Tool():
        return 17
    def Type_Appliance():
        return 18
    def Type_Ingot():
        return 19
    def Type_Torpedo():
        return 20
    def Type_Cartridge():
        return 21
    def Type_AccessCard():
        return 22
    def Type_Magazine():
        return 23
    def Type_Circuit():
        return 24
    def Type_Bottle():
        return 25
    def Type_ProgrammableChip():
        return 26
    def Type_Glasses():
        return 27
    def Type_CreditCard():
        return 28
    def Type_DirtCanister():
        return 29
    def Type_SensorProcessingUnit():
        return 30
    def Type_LiquidCanister():
        return 31
    def Type_LiquidBottle():
        return 32
    def Type_Wreckage():
        return 33
    def Type_SoundCartridge():
        return 34
    def Type_DrillHead():
        return 35
    def Type_ScanningHead():
        return 36
    def Type_Flare():
        return 37
    def Type_Blocked():
        return 38
    def Type_SuitMod():
        return 39
    def Type_Crate():
        return 40
    def Type_Portables():
        return 41

class Slot:
    def __init__(self,Type):
        pass